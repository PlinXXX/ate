<%#
  This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
  calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").
  The link variable is set to a proc that returns the link tag.
  Usage: link.call( page_number [, text [, extra_attributes_string ]])
-%>
<% link = pagy_link_proc(pagy, 'class="page-link"') -%>
<div class="pager">
    <ul class="justify-content-center text-center">
        <li class="">
            <% if pagy.prev %>
            <%== link.call(pagy.prev, (fa_icon 'chevron-left'), 'aria-label="previous"') %>
            <% else %>
            <span class="page prev disabled">
                <%== pagy_t('pagy.nav.prev') %></span>
            <% end %>
        </li>
        <% pagy.series.each do |item| # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36] -%>
        <% if item.is_a?(Integer) -%>
        <li class="">
            <%== link.call(item) %>
        </li>
        <%   elsif item.is_a?(String) -%>
        <li class="active">
            <a class="page-link">
                <%= item %>
            </a>
        </li>
        <%   elsif item == :gap -%>
        <li class="">
            <span class="page disabled" class="page-link">
                <%== pagy_t('pagy.nav.gap') %></span>
        </li>
        <% end %>
        <% end %>
        <li class="">
            <% if pagy.next %>
            <%== link.call(pagy.next, (fa_icon 'chevron-right'), 'aria-label="next"') %>
            <% else %>
            <span class="page next disabled">
                <%== pagy_t('pagy.nav.next') %></span>
            <% end %>
        </li>
    </ul>
</div>